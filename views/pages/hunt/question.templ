package hunt

import (
	"fmt"
	"github.com/namishh/holmes/services"
	"github.com/namishh/holmes/views/layouts"
	"strconv"
)

templ Question(fromProtected bool, qn services.Question, hasCompleted bool, media map[string][]string, errs map[string]string, hints []services.Hint) {
	<div class="min-h-screen flex flex-col">
  <div class="grow">
			<div class="h-[12rem] grow w-full p-3 background-cover" style="background-image: linear-gradient(to right, #000000dd, #000000aa) ,url('/static/banner.jpg'); background-size: cover;">
			<div class="flex justify-center items-center h-full">
				<h1 class="text-2xl md:text-4xl font-bold text-white">{ qn.Title }</h1>
			</div>
		</div>
		if !hasCompleted {
			<div class="w-full flex justify-center">
				<div class="flex text-white flex-col  w-full p-4 md:w-2/3 lg:w-1/2 xl:w-1/3">
					if len(hints) > 0 {
						<h1 class="text-xl md:text-2xl text-neutral-400 font-bold mb-6">Hints: </h1>
						<div class="flex flex-col gap-2">
							<div class="px-2 py-[0.8px] bg-neutral-900"></div>
							<div class="flex items-center justify-between p-3">
								<p class="w-1/3">SN</p>
								<p class="w-1/3">Worth</p>
								<div class="w-1/3"></div>
							</div>
							<div class="px-2 py-[0.8px] bg-neutral-900"></div>
							for j, hint := range hints {
								<div class="flex items-center justify-between p-3">
									<p class="w-1/3">{ strconv.Itoa(j + 1) }.</p>
									<p class="w-1/3">{ strconv.Itoa(hint.Worth) }</p>
									<a href={ templ.URL(fmt.Sprintf("/hunt/openhint/%d", hint.ID)) } class="w-1/3 text-neutral-400 hover:text-neutral-100 transition hover:underline px-4 py-1 text-right">open</a>
								</div>
								<div class="px-2 py-[0.8px] bg-neutral-900"></div>
							}
						</div>
					}
					if len(qn.Question) > 0 {
						<h1 class="text-xl md:text-2xl mt-8 text-neutral-400 font-bold">Prompt: </h1>
						<p class="text-lg md:text-xl mt-3 whitespace-pre">{ qn.Question }</p>
					}
					if len(media["images"]) > 0 || len(media["videos"]) > 0 || len(media["audios"]) > 0 {
						<h1 class="text-xl md:text-2xl mt-8 text-neutral-400 font-bold">Media: </h1>
						for _, m := range media["images"] {
							<img src={ m } class="mt-3"/>
						}
						<div class="mt-8"></div>
						for _, m := range media["videos"] {
							<video controls src={ m }></video>
						}
						<div class="mb-8"></div>
						for _, m := range media["audios"] {
							<audio controls>
								<source src={ m } type="audio/mpeg"/>
								Your browser does not support the audio element.
							</audio>
						}
					}
				</div>
			</div>
		} else {
			<div class="p-4 user-select-none text-center text-neutral-500">
				You have already completed this question. ðŸŽ‰
			</div>
		}
    </div>
		<div class="form block md:fixed md:bottom-12 h-[3.5rem] md:px-0 md:px-4  w-screen flex justify-center items-center">
			if !hasCompleted {
				<form action="" method="POST" class="w-full h-full bg-neutral-900 md:rounded-xl  shadow-xl border-[1px] border-neutral-700 md:w-2/3 lg:w-1/2 flex  xl:w-1/3 ">
					<input id="answer" name="answer" required class="grow rounded-l-xl focus:outline outline-none bg-neutral-900 px-2 md:px-8 text-white" placeholder="Answer Here"/>
					if len(errs["answer"]) > 0 {
						<button type="submit" class="bg-red-500 px-2 md:px-8 font-bold md:rounded-r-xl">Submit</button>
					} else {
						<button type="submit" class="bg-neutral-200  px-2 md:px-8 font-bold md:rounded-r-xl">Submit</button>
					}
				</form>
			}
	</div>
	</div>
}

templ QuestionIndex(
	title,
	username string,
	fromProtected bool,
	isError bool,
	cmp templ.Component,

) {
	@layouts.Base(title, username, fromProtected, isError) {
		@cmp
	}
}
